-- Load external library if needed
loadstring(game:HttpGetAsync("https://icebear.lol/StandUpright/LIB.txt"))()

-- Define the Workspace
local Workspace = game.Workspace

-- Start the game mode (assuming function Start exists in the library)
Start("Arctic")

-- Create UI elements (assuming functions CreateMenu, CreateNote, CreateToggle exist in the library)
CreateMenu("Item Farm")
CreateNote("Farm Methods", "Item Farm")

-- Variable to control farming state
local StartFarming = false

-- Timeout threshold (in seconds) for pathfinding
local TIMEOUT_THRESHOLD = 10 -- Adjust as needed

-- Function to find all items (Tools) in the Workspace
local function FindItems()
    local items = {}
    for _, v in pairs(Workspace:GetDescendants()) do
        if v:IsA("Tool") then
            table.insert(items, v)
        end
    end
    return items
end

-- Function to move character to a given position using pathfinding
local function MoveToPosition(position)
    local PathfindingService = game:GetService("PathfindingService")
    local Path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentMaxSlope = 45,
    })
    Path:ComputeAsync(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, position)
    local Waypoints = Path:GetWaypoints()

    local RunAnimation = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(game.Players.LocalPlayer.Character.SprintHandler.SprintAnim)
    RunAnimation:Play()

    local startTime = tick()
    for _, Waypoint in pairs(Waypoints) do
        game.Players.LocalPlayer.Character.Humanoid:MoveTo(Waypoint.Position)
        print("Moving to waypoint: ", Waypoint.Position)

        if Waypoint.Action == Enum.PathWaypointAction.Jump then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        local timeout = false
        local waypointReached = game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:Wait()
        if not waypointReached then
            timeout = (tick() - startTime) > TIMEOUT_THRESHOLD
        end

        if timeout then
            print("Timeout reached. Resetting character.")
            game.Players.LocalPlayer.Character:BreakJoints()
            break
        end
    end

    RunAnimation:Stop()
end

-- Function to interact with items
local function FarmItems()
    print("Farming items...")
    local items = FindItems()

    if #items == 0 then
        print("No items found in Workspace")
        return
    end

    for _, item in pairs(items) do
        local WalkTo
        if item:FindFirstChildOfClass("MeshPart") then
            WalkTo = item:FindFirstChildOfClass("MeshPart").CFrame
        elseif item:FindFirstChildOfClass("Part") then
            WalkTo = item:FindFirstChildOfClass("Part").CFrame
        end

        if WalkTo then
            print("Walking to: ", WalkTo.Position)
            MoveToPosition(WalkTo.Position)

            local ProximityPrompt
            for _, v2 in pairs(item:GetDescendants()) do
                if v2:IsA("ProximityPrompt") then
                    ProximityPrompt = v2
                    break
                end
            end

            if ProximityPrompt then
                print("Found ProximityPrompt: ", ProximityPrompt.Name)
                print("Interacting with ProximityPrompt")
                fireproximityprompt(ProximityPrompt)
            else
                print("No ProximityPrompt found for item:", item.Name)
            end
        else
            print("No valid WalkTo position found for item:", item.Name)
        end
    end
end

-- Create a toggle to start/stop farming
CreateToggle("Start Farming", "Item Farm", function()
    StartFarming = not StartFarming
    print("StartFarming toggled, current state: ", StartFarming)
    
    if StartFarming then
        print("Start farming with method: Legit")
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 30

        while StartFarming and task.wait(1) do
            FarmItems()
        end
    else
        print("Stopping farming, resetting WalkSpeed")
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    end
end)
